#!/bin/sh
#
# Set up environment variables for general build tool to operate
#
export ZOPEN_TYPE="TARBALL"

export ZOPEN_GIT_URL="https://github.com/git/git"
export ZOPEN_GIT_DEPS="curl git make m4 perl autoconf automake help2man makeinfo xz zlib openssl expat gettext coreutils diffutils"

export ZOPEN_TARBALL_URL="https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.9.5.tar.gz"
export ZOPEN_TARBALL_DEPS="curl git make m4 perl autoconf automake help2man makeinfo xz zlib openssl expat gettext gzip tar coreutils zoslib diffutils"

export ZOPEN_BOOTSTRAP="make"
export ZOPEN_BOOTSTRAP_OPTS="configure"

export ZOPEN_CHECK_OPTS='test'

export PERL_PATH="\${PERL5_HOME}/bin/perl"

export ZOPEN_EXTRA_CFLAGS='-Wc,gonum -Wc,NOOPT'
export ZOPEN_EXTRA_CPPFLAGS="-I\${OPENSSL_HOME}/include -I\${GETTEXT_HOME}/include -I\${ZLIB_HOME}/include"
export ZOPEN_EXTRA_LDFLAGS="-L\${GETTEXT_HOME}/lib -L\${OPENSSL_HOME}/lib -L\${ZLIB_HOME}/lib"

rm -f patches
if [ "${ZOPEN_TYPE}" = "TARBALL" ]; then
  ln -s tarballpatches patches
else
  ln -s gitpatches patches
fi 

#
# Run an 'init' routine to clean out any GIT environment variables 
# that might interfere with a new GIT operation
#
zopen_init()
{
  unset GIT_EXEC_PATH
  unset GIT_HOME
  unset GIT_MAN_PATH
  unset GIT_PAGER
  unset GIT_ROOT
  unset GIT_SHELL
  unset GIT_SSL_CAINFO
  unset GIT_TEMPLATE_DIR
}

zopen_check_results()
{
  chk="$2_check.log"
  line=$(cat "${chk}" | egrep '^# failed .* among .* test\(s\)')
  if [ "${line}x" = "x" ]; then
    # Error - unable to find line - mark everything failed
    totalTests=77
    failures=77
    expectedFailures=13
  else
    totalTests=$(echo ${line} | awk ' { print $5 }')
    failures=$(echo ${line} | awk ' { print $3 }')
  fi

cat <<ZZ
actualFailures:$failures
totalTests:$totalTests
expectedFailures:13
ZZ

return 0
}

